version: '3'
services:
  eventstore:
    image: eventstore:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./services/eventstore
  broker:
    image: broker:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./services/broker
  servers:
    image: servers:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./server
    depends_on:
      - eventstore
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Launcher.dll config.prod.json --populate-eventstore'
  nginx:
    image: nginx:${TAG}
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./services/nginx
    ports:
      - '80:80'
  client:
    build:
      dockerfile: Dockerfile
      context: ./client
  smoketest:
    image: smoketest:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./client-tests
    command: 'npm run e2e -- --chromeDriver=/usr/bin/chromedriver --baseUrl=http://nginx'
    depends_on:
      - client
      - nginx
      - eventstore
      - blotter
  analytics:
    image: analytics:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./server
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Analytics.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
  pricing:
    image: pricing:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./server
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Pricing.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - analytics
  referencedataread:
    image: referencedataread:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./server
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.ReferenceDataRead.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - pricing
  tradeexecution:
    image: tradeexecution:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./server
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.TradeExecution.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - referencedataread
  blotter:
    image: blotter:${TAG}
    build:
      dockerfile: Dockerfile
      context: ./server
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Blotter.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - tradeexecution
  pricehistory:
    image: pricehistory:${TAG}
    build:
      dockerfile: Dockerfile.dev
      context: ./server/Adaptive.ReactiveTrader.Server.PriceHistory
    depends_on:
      - broker
      - pricing
    environment:
     - BROKER_HOST=broker
     - BROKER_PORT=8000
  nlp:
    image: nlp
    build:
      dockerfile: Nlp.Dockerfile
      context: ./node-server
    depends_on:
      - broker
    environment:
      - BROKER_HOST=broker
      - BROKER_PORT=8000
